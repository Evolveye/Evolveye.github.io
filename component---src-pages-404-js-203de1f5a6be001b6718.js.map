{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///(webpack)/buildin/global.js"],"names":["NotFoundPage","title","g","this","Function","e","window","module","exports"],"mappings":"2FAAA,4CAUeA,UANM,kBAAM,oCACzB,kBAAC,IAAD,CAAKC,MAAM,mBACX,yCACA,yF,mBCPF,IAAIC,EAGJA,EAAI,WACH,OAAOC,KADJ,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCC,EAAOC,QAAUN","file":"component---src-pages-404-js-203de1f5a6be001b6718.js","sourcesContent":["import React from \"react\"\r\n\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => <>\r\n  <SEO title=\"404: Not found\" />\r\n  <h1>NOT FOUND</h1>\r\n  <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n</>\r\n\r\nexport default NotFoundPage\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}