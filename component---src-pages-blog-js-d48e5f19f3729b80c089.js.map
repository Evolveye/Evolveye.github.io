{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["pageContext","langKey","queryData","useStaticQuery","title","className","length","allMdx","nodes","map","id","excerpt","frontmatter","sneakPeek","tags","fm","fields","key","titleLinkAddress","slug","body","style","textAlign"],"mappings":"uLA+Ce,sBAA0C,IAAD,IAAtCA,YAAsC,gBAAT,GAAS,GAAxBC,eAAwB,aAEhDC,EAAYC,yBAzBT,aA2BT,OAAO,kBAAC,IAAD,CAAQC,MAAM,OAAOH,QAASA,GACnC,wBAAII,UAAU,wBAAd,yBACA,iCACKH,EAAUI,OAITJ,EAAUK,OAAOC,MAAMC,KAAK,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,IAAgBC,YAAoBC,GAApC,EAA8BC,KAA9B,EAAoCD,WAAcE,EAAlD,oCAAuDC,EAAvD,EAAuDA,OAAvD,OAC1B,kBAAC,IAAD,CACEC,IAAKP,EACLT,QAASA,EACTiB,iBAAgB,QAAUF,EAAOG,KACjCP,YAAaG,EACbK,KAAMP,GAAaF,OARvB,uBAAGU,MAAO,CAAEC,UAAU,WAAoB,OAAPrB,EAAA","file":"component---src-pages-blog-js-d48e5f19f3729b80c089.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport\"../components/sanitize.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport { BlogpostEntry } from \"../components/post\"\r\n\r\n/**\r\n * @typedef {Object} QueryData\r\n * @property {Object} allMdx\r\n * @property {Object[]} allMdx.nodes\r\n * @property {string} allMdx.nodes.id\r\n * @property {string} allMdx.nodes.excerpt\r\n * @property {Object} allMdx.nodes.frontmatter\r\n * @property {string} allMdx.nodes.frontmatter.date\r\n * @property {string} allMdx.nodes.frontmatter.title\r\n * @property {string} allMdx.nodes.frontmatter.author\r\n * @property {string} allMdx.nodes.frontmatter.categories\r\n * @property {string} allMdx.nodes.frontmatter.tags\r\n * @property {Object} allMdx.nodes.fields\r\n * @property {string} allMdx.nodes.fields.slug\r\n */\r\n\r\nconst query = graphql`query BlogHome {\r\n  allMdx(\r\n    sort: { fields:frontmatter___date, order:DESC },\r\n    filter: { frontmatter:{ published:{ eq:true } } },\r\n  ) {\r\n    nodes {\r\n      id\r\n      excerpt( pruneLength:255 )\r\n      frontmatter {\r\n        title\r\n        author\r\n        date( formatString:\"DD-MM-YYYY\" )\r\n        sneakPeek\r\n        categories\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n}`\r\n\r\nexport default ({ pageContext:{ langKey=`en` }={} }) => {\r\n  /** @type {QueryData} */\r\n  const queryData = useStaticQuery( query )\r\n\r\n  return <Layout title=\"Blog\" langKey={langKey}>\r\n    <h1 className=\"boxed-title is-green\">Ostatnio dodane wpisy</h1>\r\n    <section>\r\n      { !queryData.length\r\n        ?\r\n          <p style={{ textAlign:`center` }}>{langKey === `pl` ? `Post√≥w jak na razie brak ;/` : `Currently, no posts here ;/`}</p>\r\n        :\r\n          queryData.allMdx.nodes.map( ({ id, excerpt, frontmatter:{ tags, sneakPeek, ...fm}, fields }) =>\r\n            <BlogpostEntry\r\n              key={id}\r\n              langKey={langKey}\r\n              titleLinkAddress={`/post${fields.slug}`}\r\n              frontmatter={fm}\r\n              body={sneakPeek || excerpt}\r\n            />\r\n          )\r\n      }\r\n    </section>\r\n  </Layout>}"],"sourceRoot":""}