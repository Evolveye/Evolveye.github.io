{"version":3,"sources":["webpack:///./src/components/projects.module.css","webpack:///./src/components/banner.js","webpack:///./src/components/projects.js","webpack:///./src/components/lastBlogposts.js","webpack:///./src/pages/index.js","webpack:///./src/components/lastBlogposts.module.css","webpack:///./src/components/banner.module.css","webpack:///./src/pages/index.module.css"],"names":["module","exports","queryData","useStaticQuery","className","styles","banner","wrapper","photo","fluid","childImageSharp","title","description","projectsData","fluidName","href","sectionTitle","projectsWrapper","map","project","projectIconWrapper","projectIcon","query","data","allMdx","nodes","reduce","obj","frontmatter","tags","categories","forEach","tag","add","category","Set"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,gBAAkB,0CAA0C,aAAe,uCAAuC,QAAU,kCAAkC,YAAc,sCAAsC,mBAAqB,+CAA+C,YAAc,yC,0KC4BvS,aAEb,IAAMC,EAAYC,yBAdT,cAgBT,OAAO,6BAASC,UAAWC,IAAOC,QAChC,yBAAKF,UAAWC,IAAOE,SACrB,kBAAC,IAAD,CAAKH,UAAS,qBAAuBC,IAAOG,MAASC,MAAOP,EAAUM,MAAME,gBAAgBD,QAE5F,iCACE,wBAAIL,UAAS,UAAYC,IAAOM,OAAhC,mBAEA,yBAAKP,UAAWC,IAAOO,aACrB,mFACuD,6BADvD,gEAKA,0GAC8E,6BAD9E,yE,qBCOJC,EAAe,CACnB,CAAEF,MAAM,QACNG,UAAU,QACVF,YAAa,+FAC6C,uBAAGG,KAAK,gCAAR,eAD7C,8cASf,CAAEJ,MAAM,iBACNG,UAAU,aACVF,YAAa,qMAEkD,uBAAGG,KAAK,6BAAR,cAFlD,+KAOf,CAAEJ,MAAM,gCACNG,UAAU,QACVF,YAAa,uNAG8B,uBAAGG,KAAK,wBAAR,YAH9B,4VASf,CAAEJ,MAAM,YACNG,UAAU,SACVF,YAAa,+dAMe,uBAAGG,KAAK,KAAR,sBAKjB,aAEb,IAAMb,EAAYC,yBAhFT,cAkFT,OAAO,iCACL,wBAAIC,UAAS,UAAYC,IAAOW,cAAhC,wBAEA,yBAAKZ,UAAWC,IAAOY,iBAEnBJ,EAAaK,KAAK,gBAAGP,EAAH,EAAGA,MAAOG,EAAV,EAAUA,UAAWF,EAArB,EAAqBA,YAArB,OAChB,6BAASR,UAAWC,IAAOc,SACzB,yBAAKf,UAAS,qBAAuBC,IAAOe,oBAC1C,kBAAC,IAAD,CAAKhB,UAAWC,IAAOgB,YAAaZ,MAAOP,EAAWY,GAAYJ,gBAAgBD,SAGpF,yBAAKL,UAAWC,IAAOO,aACrB,4BAAKD,GACL,2BAAIC,W,qBC/GH,oBAAM,iCACnB,wBAAIR,UAAS,OAASC,IAAOW,cAA7B,yBCiEWM,G,oBAzCE,sBAAe,IAAD,IAAXC,KACGC,OAAOC,MACSC,QAAQ,SAACC,EAAD,GAAgD,IAAD,IAAvCC,YAAcC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,WAIrE,OAHAD,GAAQA,EAAKE,SAAS,SAAAC,GAAG,OAAIL,EAAIE,KAAKI,IAAKD,MAC3CF,EAAWC,SAAS,SAAAG,GAAQ,OAAIP,EAAIG,WAAWG,IAAKC,MAE7CP,IACN,CACDE,KAAM,IAAIM,IACVL,WAAY,IAAIK,MATS,EAEnBN,KAFmB,EAEbC,WAUd,OAAO,oCACL,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QA0Bc,e,qBCrElB9B,EAAOC,QAAU,CAAC,aAAe,8C,uBCAjCD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,gCAAgC,MAAQ,8BAA8B,YAAc,oCAAoC,MAAQ,gC,qBCApMD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,MAAQ,6BAA6B,YAAc,mCAAmC,MAAQ,6BAA6B,WAAa,kCAAkC,KAAO,4BAA4B,MAAQ","file":"component---src-pages-index-js-5bcb61fdc7e3605974ca.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectsWrapper\":\"projects-module--projectsWrapper--3dSAh\",\"sectionTitle\":\"projects-module--sectionTitle--1_Eu6\",\"project\":\"projects-module--project--1MbVm\",\"description\":\"projects-module--description--1nMF-\",\"projectIconWrapper\":\"projects-module--project-icon-wrapper--1A-x-\",\"projectIcon\":\"projects-module--project-icon--1kcsI\"};","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport styles from \"./banner.module.css\"\r\n\r\n /**\r\n * @typedef {Object} QueryFlow\r\n * @property {Object} childImageSharp\r\n * @property {Object} childImageSharp.fluid\r\n */\r\n\r\n/**\r\n * @typedef {Object} QueryData\r\n * @property {QueryFlow} photo\r\n */\r\n\r\nconst query = graphql`\r\n  query Banner {\r\n    photo: file( relativePath:{ eq:\"photo.png\" } ) {\r\n      childImageSharp {\r\n        fluid( maxWidth:400 ) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default () => {\r\n  /** @type {QueryData} */\r\n  const queryData = useStaticQuery( query )\r\n\r\n  return <section className={styles.banner}>\r\n    <div className={styles.wrapper}>\r\n      <Img className={`neumorphizm-white ${styles.photo}`} fluid={queryData.photo.childImageSharp.fluid} />\r\n\r\n      <article>\r\n        <h1 className={`h1 box ${styles.title}`}>Paweł Stolarski</h1>\r\n\r\n        <div className={styles.description}>\r\n          <p>\r\n            Jestem typem naukowca, programistą eksperymentatorem.<br />\r\n            Lubię bawić się kodem i wiedzieć co, jak, i dlaczego działa.\r\n          </p>\r\n\r\n          <p>\r\n            Jeśli czegoś związnego z oprogramowaniem potrzebuję, to zwyczajnie to robię.<br />\r\n            Jeśli jest to wyzwanie, lub coś nowego -- tylko mnie to zachęca.\r\n          </p>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  </section>\r\n}","import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport styles from \"./projects.module.css\"\r\n\r\n /**\r\n * @typedef {Object} QueryFlow\r\n * @property {Object} childImageSharp\r\n * @property {Object} childImageSharp.fluid\r\n */\r\n\r\n/**\r\n * @typedef {Object} QueryData\r\n * @property {QueryFlow} cactu\r\n * @property {QueryFlow} discordBot\r\n * @property {QueryFlow} webGl\r\n * @property {QueryFlow} avatar\r\n */\r\n\r\nconst query = graphql`\r\n  query Projects {\r\n    cactu: file( relativePath:{ eq:\"cactu.png\" } ) {\r\n      childImageSharp {\r\n        fluid( maxWidth:300 ) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    discordBot: file( relativePath:{ eq:\"discord_bot.png\" } ) {\r\n      childImageSharp {\r\n        fluid( maxWidth:300 ) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    webGl: file( relativePath:{ eq:\"webgl.png\" } ) {\r\n      childImageSharp {\r\n        fluid( maxWidth:300 ) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    avatar: file( relativePath:{ eq:\"evolveye_avatar.png\" } ) {\r\n      childImageSharp {\r\n        fluid( maxWidth:300 ) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst projectsData = [\r\n  { title: `Cactu`,\r\n    fluidName: `cactu`,\r\n    description: <>\r\n      Rzeczy które tworzę lubię naznaczać konkretnym logiem - <a href=\"https://codecactu.github.io/\">marką Cactu</a>.\r\n      Być moze kiedyś ktoś będzie chciał tworzyć razem ze mną pod wspólnym znakiem,\r\n      więc sygnowanie projektów znakiem towarowym zamiast nazwiskiem uważam za stosowne.\r\n      Dodatkowo logo zostało przygotowane tak, aby było łatwe do odwzorowania za pomocą grafiki wektorowej\r\n      (bowiem zostało za pomocą niej przygotowane). Sprawia to, że naznaczanie nim tworów\r\n      (przykłądowo porpzez wstawienie do stopki) jest proste, w przeciwieństwie do mojego, niewektorowego, avatara.\r\n    </>\r\n  },\r\n  { title: `Bot discordowy`,\r\n    fluidName: `discordBot`,\r\n    description: <>\r\n      Zaczęło się od założenia małej społeczności. Z czasem zainteresowałem się API dostarczanym przez\r\n      platformę Discord. Tak powstał framework na bazie biblioteki <a href=\"https://discord.js.org/#/\">discord.js</a>.\r\n      Obecnie z pomocą tego bota automatyzuję wszystko co potrzebuję. Czy to mało ambitne odpowiedzi tekstem na tekst,\r\n      czy to edycja grafiki lub odpytywanie zewnętrznych API.\r\n    </>\r\n  },\r\n  { title: `Silnik grafiki trójwymiarowej`,\r\n    fluidName: `webGl`,\r\n    description: <>\r\n      Nie lubię korzystać z bibliotek czy frameworków jeśli nie wiem co kryje się w ich wnętrzu.\r\n      Co sprawia, że dzieje się to co się dzieje.\r\n      Jako, że chciałem nauczyć się biblioteki <a href=\"https://threejs.org/\">Three.js</a> przeznaczonej\r\n      do tworzenia rysowania elementów trójwymairowych, to nie dawał mi spokoju brak umiejętnosci samodzielnego rysowania w 3D.\r\n      Postanowiłem więc w ramach rozgrzewki zrobić swój prymitywny silnik do wyświetlania kształtów 3D.\r\n      Podobnie mam z innymi technologiami -- jeśli nie wiem jak działa, to mam wewnętrzną potrzebę się dowiedzieć.\r\n    </>\r\n  },\r\n  { title: `Ta strona`,\r\n    fluidName: `avatar`,\r\n    description: <>\r\n      Programuję w zasadzie codziennie. Pomysłów mam wiele, chęci nauki jeszcze wiecej.\r\n      Wiele małych dzieł przepadło z tej racji że nie miałem kiedys konta github,\r\n      lub nie widziałem sensu we wrzucaniu nań projektów. Doszło też w końcu do tego,\r\n      że postanowiłem zrobić sobie stronę z której byłbym zadowolony, a na której mógłbym\r\n      prowadzić swojego devloga. Więcej treści na temat strony to niczym treść o tutejszym blogu,\r\n      o którym wiecej napisałem <a href=\"/\">pod tym linkiem</a>\r\n    </>\r\n  },\r\n]\r\n\r\nexport default () => {\r\n  /** @type {QueryData} */\r\n  const queryData = useStaticQuery( query )\r\n\r\n  return <section>\r\n    <h2 className={`h2 box ${styles.sectionTitle}`}>Wyróżniona aktywność</h2>\r\n\r\n    <div className={styles.projectsWrapper}>\r\n      {\r\n        projectsData.map( ({ title, fluidName, description }) => (\r\n          <article className={styles.project}>\r\n            <div className={`neumorphizm-white ${styles.projectIconWrapper}`}>\r\n              <Img className={styles.projectIcon} fluid={queryData[ fluidName ].childImageSharp.fluid} />\r\n            </div>\r\n\r\n            <div className={styles.description}>\r\n              <h3>{title}</h3>\r\n              <p>{description}</p>\r\n            </div>\r\n          </article>\r\n        ) )\r\n      }\r\n    </div>\r\n  </section>\r\n}","import React from \"react\"\r\n\r\nimport styles from \"./lastBlogposts.module.css\"\r\n\r\nexport default () => <section>\r\n  <h2 className={`box ${styles.sectionTitle}`}>Moje ostatnie wpisy</h2>\r\n</section>","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Banner from \"../components/banner\"\r\nimport Projects from \"../components/projects\"\r\nimport LastBlogpostsEntries from \"../components/lastBlogposts\"\r\nimport Post from \"../components/post\"\r\n\r\nimport styles from \"./index.module.css\"\r\nimport lastBlogposts from \"../components/lastBlogposts\"\r\n\r\n/**\r\n * @module\r\n * @param {Object} param0\r\n * @param {Object} param0.data\r\n * @param {Object} param0.data.allMdx\r\n * @param {Object[]} param0.data.allMdx.nodes\r\n * @param {string} param0.data.allMdx.nodes.id\r\n * @param {string} param0.data.allMdx.nodes.excerpt\r\n * @param {Object} param0.data.allMdx.nodes.frontmatter\r\n * @param {string} param0.data.allMdx.nodes.frontmatter.date\r\n * @param {string} param0.data.allMdx.nodes.frontmatter.title\r\n * @param {string} param0.data.allMdx.nodes.frontmatter.author\r\n * @param {string} param0.data.allMdx.nodes.frontmatter.categories\r\n * @param {string} param0.data.allMdx.nodes.frontmatter.tags\r\n * @param {Object} param0.data.allMdx.nodes.fields\r\n * @param {string} param0.data.allMdx.nodes.fields.slug\r\n */\r\nexport default ({ data }) => {\r\n  const posts = data.allMdx.nodes\r\n  const { tags, categories } = posts.reduce( (obj, { frontmatter:{ tags, categories } }) => {\r\n    tags && tags.forEach( tag => obj.tags.add( tag ) )\r\n    categories.forEach( category => obj.categories.add( category ) )\r\n\r\n    return obj\r\n  }, {\r\n    tags: new Set(),\r\n    categories: new Set()\r\n  } )\r\n\r\n  return <>\r\n    <Banner />\r\n    <Projects />\r\n    <LastBlogpostsEntries />\r\n    {/* <Layout className={styles.homepage}>\r\n      <section className={styles.collections}>\r\n        <article className={styles.collection}>\r\n          <h2 className={styles.title}>Kategorie</h2>\r\n          {[ ...categories ].map( category => <Link key={category}className={styles.item} to={`/category/${category}`}> {category}</Link> )}\r\n        </article>\r\n        <article className={styles.collection}>\r\n          <h2 className={styles.title}>Tagi</h2>\r\n          {[ ...tags ].map( tag => <Link key={tag} className={styles.item} to={`/tag/${tag}`}> {tag}</Link> )}\r\n        </article>\r\n      </section>\r\n      <section className={styles.posts}>\r\n        {posts.map( ({ id, excerpt, frontmatter:{ tags, sneakPeek, ...fm}, fields }) => <Post\r\n          key={id}\r\n          titleLinkAddress={`/post${fields.slug}`}\r\n          frontmatter={fm}\r\n          body={sneakPeek || excerpt}\r\n          isEntry={true}\r\n        /> )}\r\n      </section>\r\n      <aside className={styles.empty} />\r\n    </Layout> */}\r\n  </>\r\n}\r\n\r\nexport const query = graphql`query Posts {\r\n  allMdx(\r\n    sort: { fields:frontmatter___date, order:DESC },\r\n    filter: { frontmatter:{ published:{ eq:true } } }\r\n  ) {\r\n    nodes {\r\n      id\r\n      excerpt( pruneLength:255 )\r\n      frontmatter {\r\n        title\r\n        author\r\n        date( formatString:\"DD-MM-YYYY\" )\r\n        sneakPeek\r\n        categories\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n}`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"lastBlogposts-module--sectionTitle--3eSuj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner-module--banner--hCJfG\",\"wrapper\":\"banner-module--wrapper--vNapV\",\"photo\":\"banner-module--photo--AqbhD\",\"description\":\"banner-module--description--2Ajz7\",\"title\":\"banner-module--title--3efJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homepage\":\"index-module--homepage--1CDdd\",\"empty\":\"index-module--empty--1LwZK\",\"collections\":\"index-module--collections--nTfe9\",\"title\":\"index-module--title--3IDB3\",\"collection\":\"index-module--collection--GO5T0\",\"item\":\"index-module--item--1OLUv\",\"posts\":\"index-module--posts--1CKqU\"};"],"sourceRoot":""}